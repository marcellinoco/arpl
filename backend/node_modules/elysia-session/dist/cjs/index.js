"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sessionPlugin = void 0;
const session_1 = require("./session");
const nanoid_1 = require("nanoid");
const cookie_1 = require("./stores/cookie");
const sessionPlugin = (options) => (app) => {
    return app.derive(async (ctx) => {
        const store = options.store;
        const session = new session_1.Session;
        const cookieName = options.cookieName || 'session';
        const cookie = ctx.cookie[cookieName];
        let sid = '';
        let sessionData;
        let createRequired = false;
        if (cookie) {
            try {
                sessionData = await store.getSession(undefined, ctx);
            }
            catch {
                createRequired = true;
            }
            if (sessionData) {
                session.setCache(sessionData);
                if (session.valid()) {
                    session.reUpdate(options.expireAfter);
                }
                else {
                    store.deleteSession(undefined, ctx);
                    createRequired = true;
                }
            }
            else {
                createRequired = true;
            }
        }
        else {
            createRequired = true;
        }
        if (createRequired) {
            const initialData = {
                _data: {},
                _expire: null,
                _delete: false,
                _accessed: null
            };
            sid = (0, nanoid_1.nanoid)(24);
            store.createSession(initialData, sid, ctx);
            session.setCache(initialData);
        }
        if (!(store instanceof cookie_1.CookieStore)) {
            ctx.cookie[cookieName].set({
                value: sid,
                ...options.cookieOptions
            });
        }
        store.persistSession(session.getCache(), sid, ctx);
        if (session.getCache()._delete) {
            store.deleteSession(sid, ctx);
        }
        return {
            session
        };
    });
};
exports.sessionPlugin = sessionPlugin;
